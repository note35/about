{"version":3,"sources":["MyBox.tsx","MenuItems.tsx","Navigator.tsx","Utils.tsx","AboutItems.tsx","About.tsx","ItemTable.tsx","TalkItems.tsx","Talks.tsx","ToyItems.tsx","Toys.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MyBox","prefix","color","useParams","tColor","Box","clone","Button","variant","MenuItems","useStyles","makeStyles","theme","grow","flexGrow","sectionDesktop","display","breakpoints","up","sectionMobile","Navigator","classes","React","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","className","AppBar","position","Toolbar","map","item","key","name","to","path","IconButton","aria-label","Badge","icon","text","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","MD2Html","markdown","html","currentPattern","pos","length","push","urlObj","convert","obj","Link","target","href","url","AboutLinkItems","AboutItems","About","Grid","container","spacing","xs","Typography","component","idx","Card","CardContent","description","LinkIcon","ItemTable","headers","rowItems","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","year","reason","title","undefined","tags","tag","Chip","size","label","links","link","source","TalkItems","Talks","style","paddingLeft","paddingRight","padding","ToyItems","Toys","comment","App","exact","children","paddingTop","window","location","hostname","match","createMuiTheme","palette","type","ReactDOM","render","StrictMode","ThemeProvider","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.464a64f3.chunk.js","sourcesContent":["import React from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\n\nexport type MyBoxProps = {\n    prefix: string\n}\n\nexport function MyBox({ prefix }: MyBoxProps): JSX.Element {\n  const { color }: {color: \"default\"|\"inherit\"|\"primary\"|\"secondary\"} = useParams()\n\n  const tColor = `text.${color}`\n\n  return (\n    <Box color={tColor} clone>\n      <Button variant=\"contained\" color={color}>\n        {prefix}-{color}\n      </Button>\n    </Box>\n  )\n}\n","import React from \"react\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\"\nimport SportsEsportsIcon from \"@material-ui/icons/SportsEsports\"\n\nexport const MenuItems = [{\n  \"name\": \"about\",\n  \"text\": \"About\",\n  \"icon\": <InfoIcon />,\n  \"path\": \"/\"\n}, {\n  \"name\": \"talks\",\n  \"text\": \"Talks\",\n  \"icon\": <RecordVoiceOverIcon />,\n  \"path\": \"/talks\"\n}, {\n  \"name\": \"toys\",\n  \"text\": \"Toys\",\n  \"icon\": <SportsEsportsIcon />,\n  \"path\": \"/toys\"\n}]\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Badge from \"@material-ui/core/Badge\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\n\nimport \"./Navigator.css\"\nimport { MenuItems } from \"./MenuItems\"\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}))\n\nexport function Navigator(): JSX.Element {\n  const classes = useStyles()\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n  const mobileMenuId = \"navigator-mobile\"\n\n  const handleMobileMenuClose = () => { setMobileMoreAnchorEl(null) }\n\n  const handleMobileMenuOpen = (event: any) => { setMobileMoreAnchorEl(event.currentTarget) }\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            { MenuItems.map(item => {\n              return (\n                <Link key={item.name} className=\"disable-default\" to={item.path}>\n                  <IconButton aria-label={item.name} color=\"inherit\">\n                    <Badge color=\"secondary\">\n                      {item.icon}\n                    </Badge>\n                  </IconButton>\n                  {item.text}\n                </Link>\n              )\n            })}\n          </div>\n\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        id={mobileMenuId}\n        keepMounted\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={isMobileMenuOpen}\n        onClose={handleMobileMenuClose}\n      >\n        { MenuItems.map(item => {\n          return (\n            <MenuItem key={item.name}>\n              <Link className=\"disable-default\" to={item.path}>\n                <IconButton aria-label={item.name} color=\"inherit\">\n                  <Badge color=\"secondary\">\n                    {item.icon}\n                  </Badge>\n                </IconButton>\n                {item.text}\n              </Link>\n            </MenuItem>\n          )\n        })}\n      </Menu>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport Link from \"@material-ui/core/Link\"\n\ninterface UrlType {\n  url: string,\n  text: string\n}\n\nfunction isUrlType(obj: any): obj is UrlType {\n  return (\n    obj &&\n    typeof obj === \"object\" &&\n    typeof obj[\"url\"] === \"string\" &&\n    typeof obj[\"text\"] === \"string\"\n  )\n}\n\nfunction convert(markdown: string): Array<string|UrlType> {\n  const html = []\n  let currentPattern = \"\"\n  let pos = 0\n  while(pos < markdown.length) {\n    if(markdown[pos] === \"[\") {\n      html.push(currentPattern)\n      currentPattern = \"\"\n\n      const urlObj: UrlType = {\n        \"url\": \"\",\n        \"text\": \"\"\n      }\n\n      pos += 1  // skip \"[\"\n      while(markdown[pos] !== \"]\") {\n        currentPattern += markdown[pos]\n        pos += 1\n      }\n\n      pos += 1  // skip \"]\"\n\n      if(markdown[pos] === \"(\") {\n        pos += 1  // skip \"(\"\n      } else {\n        // incomplete pattern\n        // skip, since I assume the input is always correct\n      }\n\n      urlObj[\"text\"] = currentPattern\n      currentPattern = \"\"\n      while(markdown[pos] !== \")\") {\n        currentPattern += markdown[pos]\n        pos += 1\n      }\n\n      urlObj[\"url\"] = currentPattern\n      currentPattern = \"\"\n\n      html.push(urlObj)\n    } else {\n      currentPattern += markdown[pos]\n    }\n    pos += 1\n  }\n\n  // handle leftover\n  if(currentPattern.length > 0) {\n    html.push(currentPattern)\n  }\n\n  return html\n}\n\nexport function MD2Html(text: string) {\n  return (\n    convert(text).map(item => {\n      if(isUrlType(item)) {\n        return <Link target=\"_blank\" href={item.url}>{item.text}</Link>\n      } else {\n        return item\n      }\n    })\n  )\n}\n","import React from \"react\"\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\"\nimport TwitterIcon from \"@material-ui/icons/Twitter\"\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\"\nimport CodeIcon from \"@material-ui/icons/Code\"\n\nexport const Name = \"Kir Chou\"\n\nexport const AboutLinkItems = [\n  {\n    \"name\": \"Github\",\n    \"icon\": <GitHubIcon />,\n    \"url\": \"https://github.com/note35\"\n  }, {\n    \"name\": \"Twitter\",\n    \"icon\": <TwitterIcon />,\n    \"url\": \"https://twitter.com/k1rch0u\"\n  }, {\n    \"name\": \"Linkedin\",\n    \"icon\": <LinkedInIcon />,\n    \"url\": \"https://www.linkedin.com/in/kirchou/\"\n  }, {\n    \"name\": \"StackOverflow\",\n    \"icon\": <CodeIcon />,\n    \"url\": \"https://stackoverflow.com/users/2740386/kir-chou\"\n  }\n]\n\nexport const AboutItems = [\n  {\n    \"name\": \"Brief Bio\",\n    \"description\": \"Thanks for your interest! I’m Kir (a kind of cocktail🍸), a Software Developer at [Google Japan](https://en.wikipedia.org/wiki/Google). I've worked for [A9 (Amazon Search)](https://en.wikipedia.org/wiki/A9.com), [IBM Security](https://en.wikipedia.org/wiki/IBM), and interned for [Marvell](https://en.wikipedia.org/wiki/Marvell_Technology_Group). Outside of work, I have been a part of the [PyCon Taiwan](https://tw.pycon.org/) organization since 2017 and focusing on both reviewering agenda and giving talks. I have a master’s degree in Computer Science from [NCTU](https://www.nctu.edu.tw/en).\"\n  }, {\n    \"name\": \"Career Focuses\",\n    \"description\": \"Python, JAMStack, Build System, and Software Development Life Cycle (SDLC).\"\n  }, {\n    \"name\": \"Offline Studies\",\n    \"description\": \"C++, Rust, Python Parser (PEP617), and Python Virtual Machine.\"\n  }, {\n    \"name\": \"Followed Tech Podcasts\",\n    \"description\": \"[Python Bytes](https://pythonbytes.fm/), [The Python Podcast.__init__](https://www.pythonpodcast.com/), [CppCast](https://cppcast.com/), [Acquired](https://www.acquired.fm/), and [LadyBug Podcast](https://www.ladybug.dev/).\"\n  }\n]\n\n","import React from \"react\"\n\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Link from \"@material-ui/core/Link\"\n\nimport { MD2Html } from \"./Utils\"\nimport { Name, AboutItems, AboutLinkItems } from \"./AboutItems\"\n\nexport function About(): JSX.Element {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" component=\"h2\">{Name}</Typography>\n        {AboutLinkItems.map((item, idx) => {\n          return (\n            <Link key={idx} target=\"_blank\" href={item.url}>{item.icon}</Link>\n          )\n        })}\n      </Grid>\n\n      {AboutItems.map((item, idx) => {\n        return (\n          <Grid key={idx} item xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {item.name}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {MD2Html(item.description)}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        )\n      })}\n    </Grid>\n  )\n}\n","import React from \"react\"\n\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Link from \"@material-ui/core/Link\"\nimport Chip from \"@material-ui/core/Chip\"\nimport YouTubeIcon from \"@material-ui/icons/YouTube\"\nimport GitHubIcon from \"@material-ui/icons/GitHub\"\nimport DescriptionIcon from \"@material-ui/icons/Description\"\n\ninterface LinkType {\n  source: string,\n  url: string\n}\n\nexport interface RowType {\n  year: string,\n  reason: string,\n  title: string,\n  links: Array<LinkType>,\n  tags?: Array<string>\n}\n\nconst LinkIcon = {\n  \"Youtube\": <YouTubeIcon />,\n  \"Github\": <GitHubIcon />,\n  \"SlideShare\": <DescriptionIcon />\n}\n\nexport type ItemTableProps = {\n  name: string,\n  headers: string[],\n  rowItems: Array<RowType>,\n}\n\nexport function ItemTable({ name, headers, rowItems }: ItemTableProps): JSX.Element {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label={name}>\n        <TableHead>\n          <TableRow>\n            {headers.map((item, idx) => <TableCell key={idx} align=\"center\">{item}</TableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rowItems.map((item, idx) => (\n            <TableRow key={idx}>\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">{item.year}</TableCell>\n              <TableCell align=\"center\">{item.reason}</TableCell>\n              <TableCell align=\"center\">{item.title}\n                {item.tags === undefined ? null : <br/>}\n                {item.tags === undefined ? null : item.tags.map(\n                  (tag, idx) => <Chip key={idx} size=\"small\" label={tag} />\n                )}\n              </TableCell>\n              <TableCell align=\"center\">\n                {item.links.map((link, idx) => {\n                  return (\n                    <Link key={idx} target=\"_blank\" href={link.url}>\n                      { /*\n                        // @ts-ignore */\n                        LinkIcon[link.source]\n                      }\n                    </Link>\n                  )\n                })}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { RowType } from \"./ItemTable\"\n\nexport const TalkItems: Array<RowType> = [\n  {\n    \"year\": \"2020\",\n    \"reason\": \"PyCon TW/JP\",\n    \"title\": \"Time travel: Let’s learn from the history of Python packaging!\",\n    \"links\": [{\n      \"source\": \"Youtube\",\n      \"url\": \"https://www.youtube.com/watch?v=TvFwG2VkpFU\"\n    }, {\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/time-travel-lets-learn-from-the-history-of-python-packaging-238397814\"\n    }],\n    \"tags\": [\n      \"pep241\", \"pep314\", \"pep345\", \"pep566\",\n    ]\n  }, {\n    \"year\": \"2019\",\n    \"reason\": \"PyCon TW\",\n    \"title\": \"The str/bytes nightmare before python2 EOL\",\n    \"links\": [{\n      \"source\": \"Youtube\",\n      \"url\": \"https://www.youtube.com/watch?v=M5CGocevX9Q\"\n    }, {\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/the-strbytes-nightmare-before-python2-eol\"\n    }]\n  }, {\n    \"year\": \"2019\",\n    \"reason\": \"PyCon JP\",\n    \"title\": \"SupportingPython3 in Large Scale Project\",\n    \"links\": [{\n      \"source\": \"Youtube\",\n      \"url\": \"https://www.youtube.com/watch?v=BS-HyV3V7GI\"\n    }, {\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/supportingpython3-in-large-scale-project-174419325\"\n    }, {\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/SupportingPython3-notes\"\n    }]\n  }, {\n    \"year\": \"2018\",\n    \"reason\": \"PyCon TW\",\n    \"title\": \"A Python Engineer Under Giant Umbrella\",\n    \"links\": [{\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/pycon-tw-2018-a-python-engineer-under-giant-umbrella-python\"\n    }]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"Meetup Coffee with Science @ Tokyo\",\n    \"title\": \"Introduction of CTF and CGC\",\n    \"links\": [{\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/introduction-of-ctf-and-cgc\"\n    }]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"PyCon TW\",\n    \"title\": \"Why do projects fail? Let's talk about the story of Sinon.PY\",\n    \"links\": [{\n      \"source\": \"Youtube\",\n      \"url\": \"https://www.youtube.com/watch?v=5kvgbdC7Bdk\",\n    }, {\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/pycon-tw-2017-why-do-projects-fail-lets-talk-about-the-story-of-sinonpy\"\n    }, {\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/sinon\"\n    }]\n  }, {\n    \"year\": \"2014\",\n    \"reason\": \"Marvell Taiwan\",\n    \"title\": \"GCC\",\n    \"links\": [{\n      \"source\": \"SlideShare\",\n      \"url\": \"https://www.slideshare.net/ssuser2cbb78/gcc-37841549\"\n    }]\n  }\n]\n","import React from \"react\"\n\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport { ItemTable } from \"./ItemTable\"\nimport { TalkItems } from \"./TalkItems\"\n\nexport function Talks(): JSX.Element {\n  const description = \"I like to speak about Python and things related to Computer Science, contribute my passion to the community. My current goal is to give at least one PyCon talk per year. My topic is mostly about language itself, it can be something from my real working experience in the company, or private research. You can find my previous talks in the table.\"\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} style={{ paddingLeft: 20, paddingRight: 20 }}>\n        <Typography variant=\"h4\" component=\"h2\">Talks</Typography>\n        <Typography variant=\"body2\" component=\"h2\">\n          {description}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} style={{ padding: 20 }}>\n        <ItemTable\n          name=\"talks table\"\n          headers={[\"Year\", \"Location\", \"Title\", \"Links\"]}\n          rowItems={TalkItems}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n","import { RowType } from \"./ItemTable\"\n\nexport const ToyItems: Array<RowType> = [\n  {\n    \"year\": \"2020\",\n    \"reason\": \"🤓 Data Analysis\",\n    \"title\": \"GCJ 2020 Anaylsis\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/GCJ2020-analysis\"\n    }],\n    \"tags\": [\n      \"jupyter\", \"pandas\", \"matplotlib\", \"crawler\", \"pipenv\"\n    ]\n  }, {\n    \"year\": \"2020\",\n    \"reason\": \"💎 Docker\",\n    \"title\": \"GRPC + Redis\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/grpc-redis\"\n    }],\n    \"tags\": [\n      \"docker\", \"python\", \"grpc\", \"redis\",\n    ]\n  }, {\n    \"year\": \"2020\",\n    \"reason\": \"💎 Docker\",\n    \"title\": \"Celery + Flask + Nginx\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/celery-rds-sqs-flask-uwsgi-nginx\"\n    }],\n    \"tags\": [\n      \"docker\", \"python\", \"sqs\", \"rds\", \"dynamodb\", \"flask\", \"ngix\", \"uwsgi\"\n    ]\n  }, {\n    \"year\": \"2020\",\n    \"reason\": \"🤓 Deep Learning\",\n    \"title\": \"Snake Deep Learning\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/Snake-DeepLearning\"\n    }],\n    \"tags\": [\n      \"python\", \"pygame\", \"numpy\", \"keras\", \"tensorflow\", \"poetry\"\n    ]\n  }, {\n    \"year\": \"2019\",\n    \"reason\": \"👨🏽‍💻 AngelHack 🇯🇵\",\n    \"title\": \"Libra Shell Wrapper\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/angelhack/tree/master/ah2019_endpoint\"\n    }],\n    \"tags\": [\n      \"python\", \"libra\",\n    ]\n  }, {\n    \"year\": \"2018\",\n    \"reason\": \"💎 Web Development\",\n    \"title\": \"Flact (Flask + React)\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/flact\"\n    }],\n    \"tags\": [\n      \"python\", \"flask\", \"javascript\", \"react\"\n    ]\n  }, {\n    \"year\": \"2018\",\n    \"reason\": \"🤓 Type Hints\",\n    \"title\": \"Osu Map Parser\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/osu_map_parser\",\n    }],\n    \"tags\": [\n      \"python\", \"mypy\", \"osu\"\n    ]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"👨🏽‍💻 IETF 🇸🇬\",\n    \"title\": \"Starbucks Captive Portal Checker\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/starbucks_captive_portal_checker\",\n    }, {\n      \"source\": \"SlideShare\",\n      \"url\": \"https://github.com/capport-wg/wg-materials/blob/master/ietf100/hackathon_capport-quick-checker.pdf\",\n    }],\n    \"tags\": [\n      \"python\", \"scapy\",\n    ]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"🤓 React\",\n    \"title\": \"Osu Map Viewer\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/osu-map-viewer\"\n    }],\n    \"tags\": [\n      \"python\", \"crawler\", \"javascript\", \"react\", \"chartjs\", \"docker\", \"osu\"\n    ]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"🎮\",\n    \"title\": \"Osu Bonus Performance Point Calculator\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/osu-pp-bonus\"\n    }],\n    \"tags\": [\n      \"python\", \"osu\"\n    ]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"🤓 Async\",\n    \"title\": \"Echo Server based on talk by David Beazley in Python Brasil 2015\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/echo_server\"\n    }],\n    \"tags\": [\n      \"python\", \"asyncio\"\n    ]\n  }, {\n    \"year\": \"2017\",\n    \"reason\": \"👨🏽‍💻 Booking.com 🇹🇼\",\n    \"title\": \"City Color Analyzer\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/booking_taipeihacks\"\n    }],\n    \"tags\": [\n      \"python\", \"crawler\", \"javascript\", \"react\",\n    ]\n  }, {\n    \"year\": \"2016\",\n    \"reason\": \"🤓 Open Source\",\n    \"title\": \"Sinon Py\",\n    \"links\": [{\n      \"source\": \"Github\",\n      \"url\": \"https://github.com/note35/sinon\"\n    }],\n    \"tags\": [\n      \"python\", \"pypi\", \"mock\", \"sinonjs\"\n    ]\n  }, {\n    \"year\": \"2015\",\n    \"reason\": \"🤓 Master Degree\",\n    \"title\": \"Demo of paper: Software fault localization using DStar (D*)\",\n    \"links\": [{\n      \"source\": \"SlideShare\",\n      \"url\": \"https://people.cs.nctu.edu.tw/~wschou/d3js/dataset/loadjson.html\"\n    }],\n    \"tags\": [\n      \"javascript\", \"d3js\"\n    ]\n  }\n]\n","import React from \"react\"\n\nimport Typography from \"@material-ui/core/Typography\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Chip from \"@material-ui/core/Chip\"\n\nimport { ItemTable } from \"./ItemTable\"\nimport { ToyItems } from \"./ToyItems\"\n\nexport function Toys(): JSX.Element {\n  const description = \"A list of toys I developed previously. Some of them may still be useful now, but most of them are not actively maintained but for reference only.\"\n  const comments = [\"🤓 Study\", \"💎 Template\", \"👨🏽‍💻 Hackathon\", \"🎮 Game\"]\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} style={{ paddingLeft: 20, paddingRight: 20 }}>\n        <Typography variant=\"h4\" component=\"h2\">Toys</Typography>\n        <Typography variant=\"body2\" component=\"h2\">\n          {description}\n          <br/>\n          {comments.map((comment, idx) => <Chip key={idx} size=\"small\" label={comment}/>)}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} style={{ padding: 20 }}>\n        <ItemTable\n          name=\"toys table\"\n          headers={[\"Year\", \"Reason\", \"Title\", \"Links\"]}\n          rowItems={ToyItems}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n","/* eslint react/no-children-prop: 0 */\nimport React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\n\nimport Typography from \"@material-ui/core/Typography\"\n\nimport \"./App.css\"\nimport { MyBox } from \"./MyBox\"  // not used in production\nimport { Navigator } from \"./Navigator\"\nimport { About } from \"./About\"\nimport { Talks } from \"./Talks\"\nimport { Toys } from \"./Toys\"\nimport { MD2Html } from \"./Utils\"\n\nexport function App(): JSX.Element {\n  const footer = [\n    \"© Kir 2021\",\n    \"The [site](https://github.com/note35/about) is made by [TypeScript](https://www.typescriptlang.org/), [React (CRA)](https://reactjs.org/docs/create-a-new-react-app.html), [Material UI](https://material-ui.com/), and hosted by [Github](https://github.com/)\"\n  ]\n\n  return (\n    <div className=\"App\">\n      <Navigator />\n      <Switch>\n        <Route exact path=\"/\" children={<About />} />\n        <Route path=\"/talks\" children={<Talks />} />\n        <Route path=\"/toys\" children={<Toys />} />\n        <Route path=\"/:color\" children={<MyBox prefix=\"test\"/>} />\n        <Route children={<div>home</div>} />\n      </Switch>\n      <Typography variant=\"body2\" component=\"h2\" style={{ color: \"grey\", paddingTop: 30 }}>\n        {footer.map((item, idx) => <div key={idx}>{MD2Html(item)}</div>)}\n      </Typography>    \n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\n\nimport \"./index.css\"\nimport { App } from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Router basename=\"/about\">\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}